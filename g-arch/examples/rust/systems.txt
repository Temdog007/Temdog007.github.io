pub trait GameLogic : Send + Sync + Clone + Copy {
    fn control_player(&self, game_state: &GameState, duration : Duration) -> GameStateModification;
    fn draw_player(&self, game_state: &GameState, duration : Duration) -> GameStateModification;
    fn move_player(&self, game_state: &GameState, duration : Duration) -> GameStateModification;
}

pub fn update<T>(game_logic: &T, game_state: &GameState, d : Duration) -> GameState
where
    T: GameLogic,
{
    let mut new_game_state: GameState = *game_state;

    update_game_state(game_logic, game_state, &mut new_game_state, d);

    new_game_state
}