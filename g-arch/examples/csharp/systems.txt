using System.Threading.Tasks;

namespace GArch_CSharp_Example
{
    public interface ISystemManagerImpl
    {
        void ControlPlayer(IReadOnlyGameState gameState, GameStateModification gameStateModifier);

        void DrawPlayer(IReadOnlyGameState gameState, GameStateModification gameStateModifier);

        void MovePlayer(IReadOnlyGameState gameState, GameStateModification gameStateModifier);
    }

    public class SystemManager
    {
        private readonly ISystemManagerImpl _impl;
        private readonly GameStateModification controlPlayerModification, movePlayerModification, drawPlayerModification;

        public SystemManager(ISystemManagerImpl impl)
        {
            _impl = impl;
            controlPlayerModification = new GameStateModification();
            movePlayerModification = new GameStateModification();
            drawPlayerModification = new GameStateModification();
        }

        public void Update(IReadOnlyGameState gameState, GameState newGameState)
        {
            Reset();

            _impl.ControlPlayer(gameState, controlPlayerModification);
            _impl.MovePlayer(gameState, movePlayerModification);
            _impl.DrawPlayer(gameState, drawPlayerModification);

            Modify(newGameState);
        }

        public async Task UpdateAsync(IReadOnlyGameState gameState, GameState newGameState)
        {
            Reset();

            await Task.WhenAll(
                Task.Run(() => _impl.ControlPlayer(gameState, controlPlayerModification)),
                Task.Run(() => _impl.MovePlayer(gameState, movePlayerModification)),
                Task.Run(() => _impl.DrawPlayer(gameState, drawPlayerModification))
            );

            Modify(newGameState);
        }

        private void Modify(GameState newGameState)
        {
            newGameState.AddModifications(controlPlayerModification);
            newGameState.AddModifications(movePlayerModification);
            newGameState.AddModifications(drawPlayerModification);
        }

        private void Reset()
        {
            controlPlayerModification.Reset();
            movePlayerModification.Reset();
            drawPlayerModification.Reset();
        }
    }
}